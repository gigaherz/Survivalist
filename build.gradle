
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
//apply plugin: 'maven-publish'

repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url "https://maven.tterrag.com/"
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
    maven {
        url "https://www.cursemaven.com"
    }
    mavenLocal()
    flatDir {
        dirs project.file("deps")
    }
}

version = "3.3.2"
group= "gigaherz.survivalist"
archivesBaseName = "Survivalist-UNKNOWN"

project.afterEvaluate {
    archivesBaseName = "Survivalist-${project.MC_VERSION}"
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets {
    main.resources.srcDirs += 'src/main/generated_resources'
}

minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        clientTest {
            parent runs.client

            mods {
                thismod {
                    source sourceSets.main
                    source sourceSets.test
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'survivalist', '--all', '--output', file('src/main/generated_resources/'), '--existing', file('src/main/resources/')

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.23'

    compileOnly fg.deobf("mezz.jei:jei-1.16.2:7.1.3.19:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.2:7.1.3.19")

    implementation fg.deobf("dev.gigaherz.jsonmerger:JsonMerger-lite:1.0")

    //deobfCompile 'CraftTweaker2:CraftTweaker2-API:4.1.11.500'
    //deobfCompile 'CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.16.535'

    runtimeOnly fg.deobf("curse.maven:immersive-engineering-231951:3233018")

    //compile fileTree(dir: 'libs', include: '*.jar')
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
                "Specification-Title": "survivalist",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}